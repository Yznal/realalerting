package ru.realalerting.controlplane.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AlertAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlertAllPropertiesEquals(Alert expected, Alert actual) {
        assertAlertAutoGeneratedPropertiesEquals(expected, actual);
        assertAlertAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlertAllUpdatablePropertiesEquals(Alert expected, Alert actual) {
        assertAlertUpdatableFieldsEquals(expected, actual);
        assertAlertUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlertAutoGeneratedPropertiesEquals(Alert expected, Alert actual) {
        assertThat(expected)
            .as("Verify Alert auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlertUpdatableFieldsEquals(Alert expected, Alert actual) {
        assertThat(expected)
            .as("Verify Alert relevant properties")
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()))
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAlertUpdatableRelationshipsEquals(Alert expected, Alert actual) {
        assertThat(expected)
            .as("Verify Alert relationships")
            .satisfies(e -> assertThat(e.getMetric()).as("check metric").isEqualTo(actual.getMetric()));
    }
}
