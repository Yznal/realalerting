package ru.realalerting.controlplane.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MetricTagsValueAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMetricTagsValueAllPropertiesEquals(MetricTagsValue expected, MetricTagsValue actual) {
        assertMetricTagsValueAutoGeneratedPropertiesEquals(expected, actual);
        assertMetricTagsValueAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMetricTagsValueAllUpdatablePropertiesEquals(MetricTagsValue expected, MetricTagsValue actual) {
        assertMetricTagsValueUpdatableFieldsEquals(expected, actual);
        assertMetricTagsValueUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMetricTagsValueAutoGeneratedPropertiesEquals(MetricTagsValue expected, MetricTagsValue actual) {
        assertThat(expected)
            .as("Verify MetricTagsValue auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMetricTagsValueUpdatableFieldsEquals(MetricTagsValue expected, MetricTagsValue actual) {
        assertThat(expected)
            .as("Verify MetricTagsValue relevant properties")
            .satisfies(e -> assertThat(e.getValue1()).as("check value1").isEqualTo(actual.getValue1()))
            .satisfies(e -> assertThat(e.getValue256()).as("check value256").isEqualTo(actual.getValue256()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMetricTagsValueUpdatableRelationshipsEquals(MetricTagsValue expected, MetricTagsValue actual) {
        assertThat(expected)
            .as("Verify MetricTagsValue relationships")
            .satisfies(e -> assertThat(e.getMetric()).as("check metric").isEqualTo(actual.getMetric()))
            .satisfies(e -> assertThat(e.getTenant()).as("check tenant").isEqualTo(actual.getTenant()));
    }
}
