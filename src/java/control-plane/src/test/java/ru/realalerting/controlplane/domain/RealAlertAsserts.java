package ru.realalerting.controlplane.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RealAlertAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRealAlertAllPropertiesEquals(RealAlert expected, RealAlert actual) {
        assertRealAlertAutoGeneratedPropertiesEquals(expected, actual);
        assertRealAlertAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRealAlertAllUpdatablePropertiesEquals(RealAlert expected, RealAlert actual) {
        assertRealAlertUpdatableFieldsEquals(expected, actual);
        assertRealAlertUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRealAlertAutoGeneratedPropertiesEquals(RealAlert expected, RealAlert actual) {
        assertThat(expected)
            .as("Verify RealAlert auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRealAlertUpdatableFieldsEquals(RealAlert expected, RealAlert actual) {
        assertThat(expected)
            .as("Verify RealAlert relevant properties")
            .satisfies(e -> assertThat(e.getType()).as("check type").isEqualTo(actual.getType()))
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getConf()).as("check conf").isEqualTo(actual.getConf()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRealAlertUpdatableRelationshipsEquals(RealAlert expected, RealAlert actual) {
        assertThat(expected)
            .as("Verify RealAlert relationships")
            .satisfies(e -> assertThat(e.getClient()).as("check client").isEqualTo(actual.getClient()))
            .satisfies(e -> assertThat(e.getMetric()).as("check metric").isEqualTo(actual.getMetric()));
    }
}
